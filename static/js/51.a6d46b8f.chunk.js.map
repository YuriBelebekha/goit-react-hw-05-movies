{"version":3,"file":"static/js/51.a6d46b8f.chunk.js","mappings":"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","sources":["components/Loader/Loader.jsx","services/tmdb-api.js","services/toast-options.js","views/MoviesView/MoviesView.jsx","components/Loader/Loader.module.css","webpack://goit-react-hw-05-movies/./src/views/MoviesView/MoviesView.module.css?113d"],"sourcesContent":["import { Vortex } from 'react-loader-spinner';\nimport css from './Loader.module.css';\n\nexport const Loader = () => {\n  return (\n    <div className={css.Loader}>\n      <Vortex\n        height='45'\n        width='45'\n        colors={['black', 'yellow', 'black', 'yellow', 'yellow', 'black']}\n      />\n    </div>\n  )\n};","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '008c8606747b1b5922ba109cd86c2637';\n\nexport const {\n  media_type,\n  time_window,\n  language,\n  page,\n  include_adult,\n  baseApiUrlForPoster,\n  posterWidth,\n  posterHeight,\n  posterMissing,\n  profilePhotoMissing,\n} = {\n  'media_type': 'movie',\n  'time_window': 'day',\n  'language': 'en-US',\n  'page': 1,\n  'include_adult': false,\n  'baseApiUrlForPoster': 'https://image.tmdb.org/t/p/w300/',\n  'posterWidth': 170,\n  'posterHeight': 250,\n  'posterMissing': 'https://i.pinimg.com/564x/6f/8c/f1/6f8cf13bd79b8be7d50cced5552eb99f.jpg',\n  'profilePhotoMissing': 'https://i.pinimg.com/564x/6d/88/40/6d8840c2c2a29dca141b53754787c944.jpg',\n};\n\n// The Movie Database API docs for \"get-trending\":\n// https://developers.themoviedb.org/3/trending/get-trending\n\nexport async function fetchGetTrending() {\n  const { data } = await axios.get(`\n    ${BASE_URL}/trending/${media_type}/${time_window}?api_key=${API_KEY}\n  `);\n  return await data;\n};\n\n// The Movie Database API docs for \"search-movies\":\n// https://developers.themoviedb.org/3/search/search-movies\n\nexport async function fetchSearchMovies(query) {\n  const { data } = await axios.get(`\n    ${BASE_URL}/search/${media_type}?api_key=${API_KEY}&language=${language}&page=${page}&include_adult=${include_adult}&query=${query}\n  `);\n  return await data;\n};\n\n// The Movie Database API docs for \"get-movie-details\":\n// https://developers.themoviedb.org/3/movies/get-movie-details\n\nexport async function fetchGetMovieDetails(id) {\n  const { data } = await axios.get(`\n    ${BASE_URL}/${media_type}/${id}?api_key=${API_KEY}&language=${language}\n  `);\n  return await data;\n};\n\n// The Movie Database API docs for \"get-movie-credits\":\n// https://developers.themoviedb.org/3/movies/get-movie-credits\n\nexport async function fetchGetMovieCredits(id) {\n  const { data } = await axios.get(`\n    ${BASE_URL}/${media_type}/${id}/credits?api_key=${API_KEY}&language=${language}\n  `);\n  return await data;\n};\n\n// The Movie Database API docs \"get-movie-reviews\":\n// https://developers.themoviedb.org/3/movies/get-movie-reviews\n\nexport async function fetchGetMovieReviews(id) {\n  const { data } = await axios.get(`\n    ${BASE_URL}/${media_type}/${id}/reviews?api_key=${API_KEY}&language=${language}\n  `);\n  return await data;\n};","import { Flip } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nexport const ToastOptions = {\n  autoClose: 1500,\n  pauseOnFocusLoss: true,\n  theme: 'colored',\n  transition: Flip,\n};","import { useState, useEffect } from 'react';\nimport { useLocation, useSearchParams, Link } from 'react-router-dom';\nimport {\n  fetchSearchMovies,\n  baseApiUrlForPoster,\n  posterWidth,\n  posterMissing,\n  posterHeight\n} from '../../services/tmdb-api';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { ToastOptions } from '../../services/toast-options';\nimport { Loader } from '../../components/Loader/Loader';\nimport css from './MoviesView.module.css';\n\nexport const MoviesView = () => {\n  const [query, setQuery] = useState('');\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams('');\n\n  const location = useLocation();\n  const searchQuery = searchParams.get('query');\n\n  useEffect(() => {\n    searchQuery &&\n      fetchSearchMovies(searchQuery)\n        .then(({ results, total_results }) => {\n          if (total_results === 0) {\n            setTimeout(() => {\n              toast.warning('Sorry, there are no movies matching your search query', ToastOptions);\n            }, 100);\n            setIsLoading(false);\n            return;\n          }\n          \n          setIsLoading(false);\n          setMovies(results);          \n\n          setTimeout(() => {\n            toast.success(`Total found ${total_results} movies`, ToastOptions);\n          }, 100);\n        })\n        .finally(\n          setIsLoading(true) \n        )\n  }, [searchQuery]);\n\n  const handleSubmit = async e => {\n    e.preventDefault();    \n\n    fetchSearchMovies(searchQuery)\n      .then(() => {\n        if (query === '') {\n          setTimeout(() => {\n            toast.info('Your query is empty, please enter movie title to search', ToastOptions);\n          }, 100);      \n        };\n      })\n      .catch(error => {\n        setTimeout(() => {\n          toast.error(`Something went wrong... Details: ${error.message}`, ToastOptions);\n        }, 100);        \n        return;\n      })    \n\n    setMovies(await fetchSearchMovies(query));    \n    setSearchParams({ query });\n    setQuery('');\n  };\n\n  const onChange = e => {\n    setQuery(e.target.value);    \n  };\n\n  return (\n    <>\n      <div className={css.Container}>\n        <form onSubmit={handleSubmit}>\n          <input\n            className={css.SearchMoviesInput}\n            type='text'\n            value={query}\n            onChange={onChange}\n          />\n          <button\n            className={css.SearchMoviesInputBtn}\n            type='submit'\n          >\n            Search\n          </button>\n        </form>\n        \n        {isLoading && <Loader />}\n\n        {movies.length > 0 && (\n          <ul className={css.MoviesList}>\n            {movies.map(({ id, title, poster_path }) => (\n              <li className={css.MoviesListItem} key={id}>\n                <Link to={`/movies/${id}`} state={{ from: location }} key={id}>\n                  <img\n                    className={css.MovieListItemImg}\n                    src={poster_path\n                      ? `${baseApiUrlForPoster}${poster_path}`\n                      : posterMissing}\n                    alt={title}\n                    height={posterHeight}\n                    width={posterWidth}\n                  />\n                  <h3 className={css.MoviesListItemTitle}>{title}</h3>\n                </Link>\n              </li>\n            ))}\n          </ul>\n        )}\n        \n      </div>\n\n      <ToastContainer />\n    </>\n  )\n};","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {\"Container\":\"MoviesView_Container__CW+cY\",\"SearchMoviesInput\":\"MoviesView_SearchMoviesInput__csXZP\",\"SearchMoviesInputBtn\":\"MoviesView_SearchMoviesInputBtn__OVfz-\",\"MoviesList\":\"MoviesView_MoviesList__EIk68\",\"MoviesListItem\":\"MoviesView_MoviesListItem__ryRCs\",\"MovieListItemImg\":\"MoviesView_MovieListItemImg__y1kTR\",\"MoviesListItemTitle\":\"MoviesView_MoviesListItemTitle__FHPm7\"};"],"names":["Loader","className","css","height","width","colors","BASE_URL","API_KEY","media_type","time_window","language","page","include_adult","baseApiUrlForPoster","posterWidth","posterHeight","posterMissing","profilePhotoMissing","fetchGetTrending","axios","data","fetchSearchMovies","query","fetchGetMovieDetails","id","fetchGetMovieCredits","fetchGetMovieReviews","ToastOptions","autoClose","pauseOnFocusLoss","theme","transition","Flip","MoviesView","useState","setQuery","movies","setMovies","isLoading","setIsLoading","useSearchParams","searchParams","setSearchParams","location","useLocation","searchQuery","get","useEffect","then","results","total_results","setTimeout","toast","finally","handleSubmit","e","preventDefault","catch","error","message","onSubmit","type","value","onChange","target","length","map","title","poster_path","to","state","from","src","alt"],"sourceRoot":""}