{"version":3,"file":"static/js/186.ff3a25b9.chunk.js","mappings":"+NAGaA,EAAS,WACpB,OACE,gBAAKC,UAAWC,EAAAA,QAAAA,OAAhB,UACE,SAAC,KAAD,CACEC,OAAO,KACPC,MAAM,KACNC,OAAQ,CAAC,QAAS,SAAU,QAAS,SAAU,SAAU,YAIhE,C,2ICPYC,EAAU,WACrB,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACQC,GAAYC,EAAAA,EAAAA,IAAU,WAAtBD,QAeR,OAbAE,EAAAA,EAAAA,YAAU,WACRF,IACAG,EAAAA,EAAAA,IAAqBH,GAClBI,MAAK,SAACC,GACLN,GAAa,GACbF,EAAWQ,EAAKC,QACjB,IACAC,OAAM,SAACC,GAAD,OAAWC,QAAQC,IAAIF,EAAMG,QAA7B,IACNC,QACCb,GAAa,GAElB,GAAE,CAACC,KAGF,+BACE,iBAAKX,UAAWC,EAAAA,QAAAA,UAAhB,UACGQ,IAAa,SAAC,EAAAV,OAAD,IACbQ,EAAQiB,OAAS,GAChB,eAAIxB,UAAWC,EAAAA,QAAAA,YAAf,SACGM,EAAQkB,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACX,gBAAI5B,UAAWC,EAAAA,QAAAA,gBAAf,WACE,gBAAID,UAAWC,EAAAA,QAAAA,sBAAf,qBAAmD0B,MACnD,cAAG3B,UAAWC,EAAAA,QAAAA,uBAAd,SAA2C2B,MAFJF,EAD9B,OAOZ,yEAIZ,C,2TCvCKG,EAAW,+BACXC,EAAU,mCAGdC,EAWc,QAVdC,EAWe,MAVfC,EAWY,QAVZC,EAWQ,EAVRC,GAWiB,EAVjBC,EAWuB,mCAVvBC,EAWe,IAVfC,EAWgB,IAVhBC,EAWiB,0EAVjBC,EAWuB,0EAMlB,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,sGACkBC,EAAAA,EAAAA,IAAA,gBACnBb,EADmB,qBACEE,EADF,YACgBC,EADhB,oBACuCF,EADvC,SADlB,uBACGd,EADH,EACGA,KADH,SAIQA,EAJR,0GAUA,SAAe2B,EAAtB,+CAAO,OAAP,oBAAO,WAAiCC,GAAjC,yFACkBF,EAAAA,EAAAA,IAAA,gBACnBb,EADmB,mBACAE,EADA,oBACsBD,EADtB,qBAC0CG,EAD1C,iBAC2DC,EAD3D,0BACiFC,EADjF,kBACwGS,EADxG,SADlB,uBACG5B,EADH,EACGA,KADH,SAIQA,EAJR,0GAUA,SAAe6B,EAAtB,+CAAO,OAAP,oBAAO,WAAoCnB,GAApC,yFACkBgB,EAAAA,EAAAA,IAAA,gBACnBb,EADmB,YACPE,EADO,YACOL,EADP,oBACqBI,EADrB,qBACyCG,EADzC,SADlB,uBACGjB,EADH,EACGA,KADH,SAIQA,EAJR,0GAUA,SAAe8B,EAAtB,+CAAO,OAAP,oBAAO,WAAoCpB,GAApC,yFACkBgB,EAAAA,EAAAA,IAAA,gBACnBb,EADmB,YACPE,EADO,YACOL,EADP,4BAC6BI,EAD7B,qBACiDG,EADjD,SADlB,uBACGjB,EADH,EACGA,KADH,SAIQA,EAJR,0GAUA,SAAeF,EAAtB,+CAAO,OAAP,oBAAO,WAAoCY,GAApC,yFACkBgB,EAAAA,EAAAA,IAAA,gBACnBb,EADmB,YACPE,EADO,YACOL,EADP,4BAC6BI,EAD7B,qBACiDG,EADjD,SADlB,uBACGjB,EADH,EACGA,KADH,SAIQA,EAJR,0G,8BCvEP,WAAiB,C,8BCAjB,WAAgB,UAAY,2BAA2B,YAAc,6BAA6B,gBAAkB,iCAAiC,uBAAyB,wC","sources":["components/Loader/Loader.jsx","components/Reviews/Reviews.jsx","services/tmdb-api.js","components/Loader/Loader.module.css","webpack://goit-react-hw-05-movies/./src/components/Reviews/Reviews.module.css?7248"],"sourcesContent":["import { Vortex } from 'react-loader-spinner';\nimport css from './Loader.module.css';\n\nexport const Loader = () => {\n  return (\n    <div className={css.Loader}>\n      <Vortex\n        height='45'\n        width='45'\n        colors={['black', 'yellow', 'black', 'yellow', 'yellow', 'black']}\n      />\n    </div>\n  )\n};","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchGetMovieReviews } from '../../services/tmdb-api';\nimport { Loader } from '../Loader/Loader';\nimport css from './Reviews.module.css';\n\nexport const Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const { movieId } = useParams('movieId');\n\n  useEffect(() => {\n    movieId &&\n    fetchGetMovieReviews(movieId)\n      .then((data) => {\n        setIsLoading(false);\n        setReviews(data.results);\n      })\n      .catch((error) => console.log(error.message))\n      .finally(\n        setIsLoading(true)\n      )\n  }, [movieId])\n\n  return (\n    <>\n      <div className={css.Container}>\n        {isLoading && <Loader />}\n        {reviews.length > 0 ? (\n          <ul className={css.ReviewsList}>\n            {reviews.map(({ id, author, content }) => (\n              <li className={css.ReviewsListItem} key={id}>\n                <h3 className={css.ReviewsListItemAuthor}>Author: {author}</h3>\n                <p className={css.ReviewsListItemContent}>{content}</p>\n              </li>\n            ))}\n          </ul>\n        ) : (<b>Sorry, there is no reviews for this movie</b>)}\n      </div>\n    </>\n  )\n};","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '008c8606747b1b5922ba109cd86c2637';\n\nexport const {\n  media_type,\n  time_window,\n  language,\n  page,\n  include_adult,\n  baseApiUrlForPoster,\n  posterWidth,\n  posterHeight,\n  posterMissing,\n  profilePhotoMissing,\n} = {\n  'media_type': 'movie',\n  'time_window': 'day',\n  'language': 'en-US',\n  'page': 1,\n  'include_adult': false,\n  'baseApiUrlForPoster': 'https://image.tmdb.org/t/p/w300/',\n  'posterWidth': 170,\n  'posterHeight': 250,\n  'posterMissing': 'https://i.pinimg.com/564x/6f/8c/f1/6f8cf13bd79b8be7d50cced5552eb99f.jpg',\n  'profilePhotoMissing': 'https://i.pinimg.com/564x/6d/88/40/6d8840c2c2a29dca141b53754787c944.jpg',\n};\n\n// The Movie Database API docs for \"get-trending\":\n// https://developers.themoviedb.org/3/trending/get-trending\n\nexport async function fetchGetTrending() {\n  const { data } = await axios.get(`\n    ${BASE_URL}/trending/${media_type}/${time_window}?api_key=${API_KEY}\n  `);\n  return await data;\n};\n\n// The Movie Database API docs for \"search-movies\":\n// https://developers.themoviedb.org/3/search/search-movies\n\nexport async function fetchSearchMovies(query) {\n  const { data } = await axios.get(`\n    ${BASE_URL}/search/${media_type}?api_key=${API_KEY}&language=${language}&page=${page}&include_adult=${include_adult}&query=${query}\n  `);\n  return await data;\n};\n\n// The Movie Database API docs for \"get-movie-details\":\n// https://developers.themoviedb.org/3/movies/get-movie-details\n\nexport async function fetchGetMovieDetails(id) {\n  const { data } = await axios.get(`\n    ${BASE_URL}/${media_type}/${id}?api_key=${API_KEY}&language=${language}\n  `);\n  return await data;\n};\n\n// The Movie Database API docs for \"get-movie-credits\":\n// https://developers.themoviedb.org/3/movies/get-movie-credits\n\nexport async function fetchGetMovieCredits(id) {\n  const { data } = await axios.get(`\n    ${BASE_URL}/${media_type}/${id}/credits?api_key=${API_KEY}&language=${language}\n  `);\n  return await data;\n};\n\n// The Movie Database API docs \"get-movie-reviews\":\n// https://developers.themoviedb.org/3/movies/get-movie-reviews\n\nexport async function fetchGetMovieReviews(id) {\n  const { data } = await axios.get(`\n    ${BASE_URL}/${media_type}/${id}/reviews?api_key=${API_KEY}&language=${language}\n  `);\n  return await data;\n};","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {\"Container\":\"Reviews_Container__jQEDF\",\"ReviewsList\":\"Reviews_ReviewsList__pyBOr\",\"ReviewsListItem\":\"Reviews_ReviewsListItem__cFLRg\",\"ReviewsListItemContent\":\"Reviews_ReviewsListItemContent__NXdrN\"};"],"names":["Loader","className","css","height","width","colors","Reviews","useState","reviews","setReviews","isLoading","setIsLoading","movieId","useParams","useEffect","fetchGetMovieReviews","then","data","results","catch","error","console","log","message","finally","length","map","id","author","content","BASE_URL","API_KEY","media_type","time_window","language","page","include_adult","baseApiUrlForPoster","posterWidth","posterHeight","posterMissing","profilePhotoMissing","fetchGetTrending","axios","fetchSearchMovies","query","fetchGetMovieDetails","fetchGetMovieCredits"],"sourceRoot":""}